extends(src='../layout.sgr')

  block(name='nav')
    include(src='includes/_nav.sgr')

  block(name='content')
        header(id='banner' style="background-image: url({{ contentful.headBanner[0].fields.image.fields.file.url }})")

          // 1. The <iframe> (and video player) will replace this <div> tag.
          #player.zero-opacity.hidden
          script.
            // 2. This code loads the IFrame Player API code asynchronously.
            var tag = document.createElement('script');

            tag.src = "https://www.youtube.com/iframe_api";
            var firstScriptTag = document.getElementsByTagName('script')[0];
            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

            // 3. This function creates an <iframe> (and YouTube player)
            //    after the API code downloads.
            var player;
            function onYouTubeIframeAPIReady() {
              player = new YT.Player('player', {
                height: '100%',
                width: '100%',
                videoId: 'gIwAcBlFPm8',
                events: {
                  'onReady': onPlayerReady,
                  'onStateChange': onPlayerStateChange
                },

                playerVars: {rel: 0}

              });
            }

            // 4. The API will call this function when the video player is ready.
            function onPlayerReady(event) {
              // event.target.playVideo();

              var playButton = document.getElementById('playbutton'),
                  ctaLayer = document.getElementById('bannerGradient'),
                  playerLayer = document.getElementById('player');

              playButton.addEventListener("click", function(){
                ctaLayer.classList.toggle("zero-opacity");
                setTimeout(ctaLayer.classList.toggle("hidden"), 700);
                setTimeout(playerLayer.classList.toggle("hidden"), 700);
                setTimeout(playerLayer.classList.toggle("zero-opacity"), 700);

                event.target.playVideo();
              });


            }

            // 5. The API calls this function when the player's state changes.
            //    The function indicates that when playing a video (state=1),
            //    the player should play for six seconds and then stop.
            var done = false;
            function onPlayerStateChange(event) {
              if (event.data == YT.PlayerState.PLAYING && !done) {
                // setTimeout(stopVideo, 6000);
                // done = true;
              }

              // MY STOP LOGICS
              if (event.data == YT.PlayerState.ENDED) {
                var playButton = document.getElementById('playbutton'),
                    ctaLayer = document.getElementById('bannerGradient'),
                    playerLayer = document.getElementById('player');
                    playerLayer.classList.toggle("zero-opacity");
                    setTimeout(playerLayer.classList.toggle("hidden"), 700);
                    setTimeout(ctaLayer.classList.toggle("hidden"), 700);
                    setTimeout(ctaLayer.classList.toggle("zero-opacity"), 700);
                }


            }
            function stopVideo() {
              player.stopVideo();
            }


          #bannerGradient
            div
              h1 {{ contentful.headBanner[0].fields.headlineIt }}
              img(id='playbutton' src='../img/play-button.png')
              p {{ contentful.headBanner[0].fields.sublineIt }}

        section#products
          each(loop='fragrance of contentful.productsIT')
            .product-card-box-gradient
              .product-card(style="background-image: url( {{ fragrance.fields.cardPhoto.fields.file.url }} )")
                a(href="products/{{ fragrance.fields.productUrl.toLowerCase() }}")
                  .product-card-content
                    h2 {{ fragrance.fields.name }}
                    p.p-card-subtext {{ fragrance.fields.subname }}
                    p.p-card-price â‚¬  {{ fragrance.fields.price }}
                    button.clear-cta Dettagli

        include(src='includes/_footer.sgr')
